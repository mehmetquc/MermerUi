// <auto-generated />
using System;
using MermerUi.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MermerUi.Persistence.Migrations
{
    [DbContext(typeof(MermerDbContext))]
    partial class MermerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MermerUi.Domain.Models.BaseModels.BaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Anasayfa", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Anasayfas");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Ayricaliklarimiz", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Ikon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Ayricaliklarimizs");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.DetaylıUrun", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslık")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detay5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAcıklamaBaslıgı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urunMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DetaylıUruns");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Hakkimizda", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Hakkimizdas");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Header", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Referans", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Referans");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Urunlerimiz", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Urunlerimizs");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.User", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("EMailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("822e044b-5656-4b44-ad0f-01d7761e2cbe"),
                            CreateDate = new DateTime(2025, 9, 4, 23, 17, 39, 451, DateTimeKind.Local).AddTicks(7163),
                            CreatedUser = "Admin",
                            EMailAddress = "mehmetq@gmail.com",
                            FirstName = "Süper",
                            IsActive = true,
                            LastName = "Admin",
                            Password = "251533"
                        },
                        new
                        {
                            Id = new Guid("c326ee05-4878-4219-958d-ad3caefa4e11"),
                            CreateDate = new DateTime(2025, 9, 4, 23, 17, 39, 451, DateTimeKind.Local).AddTicks(7203),
                            CreatedUser = "Admin",
                            EMailAddress = "yasemekmermer@gmail.com.tr",
                            FirstName = "Yasemek",
                            IsActive = true,
                            LastName = "Mermer",
                            Password = "131580"
                        });
                });

            modelBuilder.Entity("MermerUi.Domain.Models.Yorum", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Yorums");
                });

            modelBuilder.Entity("MermerUi.Domain.Models.YıldızUrun", b =>
                {
                    b.HasBaseType("MermerUi.Domain.Models.BaseModels.BaseModel");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("YıldızUruns");
                });
#pragma warning restore 612, 618
        }
    }
}
